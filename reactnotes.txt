# Author: William Z Chadwick
# Date Created: 08/10/2022
# Date Modified: 08/10/2022
# Description: A place for me to keep notes and code that I type out following SoloLearn's React + Redux Course

React was created by Facebook (Now Meta).

DOM = Document Object Model

React uses a virtual DOM (Document Object Model) "to update only the parts of the website that have changed." >> Much faster updates.

"Allows developers to group related code together, ... making building and maintaining large scale applications much less complex."

large community and open source

# code: <script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
# code: <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin></script>

^^ these are two script tags that add the React library to the head of our HTML doc. not prefered for large projects?

script to enable JSX:

# code: <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

"This approach of adding React to a website is only suitable for creating small demos."

---

need containter to display something using react:

# code: <div id="container"></div>
Note: ^^ doesn't have to be id'd as "container"

# code:
# <script type="text/babel">
# ReactDOM.render(
#	<h1>Hello, React</h1>
#	document.getElementById('container')
# )
# </script>

# code:
# <div id="root">
# </div>

First two lessons complete.

Third lesson:

using React-DOM in a website beyond a demo.

"Create React App"

# code [to run in command line]:
# npx create-react-app my-app
# cd my-app
# npm start

^installs all relevant dependencies and starts project on "localhost:3000"

default output of our project in the browswer will be a React logo and note.

"Create React App allows us to focus on the code rather than installing and configuring different tools."

# code [cli]:
# npx create-react-app contact
# cd contacts
# npm start

"Let's explore the structure of our project by opening it using a code editor"

> public [dir]
> src [dir]
--package-lock.json
--package.json
--README.md

"The public folder contains files related to how the application will display on the client, the most important of those being index.html, which is the HTML template of our page."

> public [dir]
opened:
--favicon.ico
--index.html
--logo192.png
--logo512.png
--manifest.json
--robots.txt

> src [dir]
opened:
--App.css
--App.js
--App.test.js
--index.css
--index.js
--logo.svg
--serviceWorker.js
--setupTests.js

React uses "Webpack" as a "file loader"

"Webpack creates a "bundle" file containing the content of multiple files that need to be "bundled" together and it is all added together into a single file instead of making the HTML file go and find multiple files, which can slow down load times tremendously, it only has to find one file."

Two critical files:

-index.js
-App.js

about index.js: [intry point into application "In our code, a method called ReactDOM.render() is used to find an element with id="root" in the HTML and add our React application inside of that element (similar to the previous lesson)."]

about App.js: ["This file is the main component that will be rendered to the DOM which currently includes the React ogo image and the default text, that we see in the output."]

so:

index.html belongs in the public folder

whereas:

index.css & index.js belong in the src folder

---

Begin Lesson 4:

creating your own "Contact Manager" app using React

"will allow to view the list of contacts and add new ones to the list"

example on StackBlitz

everything will make complete sense by the time you finish the course

# code: 
# ReactDOM.render(
# <h1>React Rocks!</h1>,
# document.getElementById('root')
# );

[package.json holds the list of dependencies for the application]

end lesson 4, end unit 1;

---


